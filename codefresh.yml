version: '1.0'
steps:
  BuildingDockerImage:
    title: Building Docker Image
    type: build
    # The name of the image
    image_name: fcocozza/twitter-cf-app
    working_directory: ./
    dockerfile: Dockerfile
    tag: '${{CF_BRANCH_TAG_NORMALIZED}}'

  GenerateSSLCertificate:
    title: Generating the SSL Self-signed certificate
    image: paulczar/omgwtfssl
    working_directory: ${{CF_VOLUME_PATH}}
    commands:
      - echo "SSL_SUBJECT = " $SSL_SUBJECT
      - mkdir -p ${{CF_VOLUME_PATH}}/certs
      - cd ${{CF_VOLUME_PATH}}/certs
      - /usr/local/bin/generate-certs
    environment:
      - SSL_SUBJECT=${{SSL_SUBJECT}}

  UseSSLCertificate:
    title: Using the certificate created in previous step
    image: alpine:latest
    working_directory: ${{CF_VOLUME_PATH}}/certs
    commands:
      - ls
      - echo "This demonstrates how to use the generated certificate in another step:"
      - echo "cert.pem file:"
      - cat cert.pem
      - echo "key.pem file:"
      - cat key.pem
      - echo "key.csr file:"
      - cat key.csr

  PushingToDockerRegistry:
    title: Pushing to Docker Registry
    type: push
    candidate: '${{BuildingDockerImage}}'
    tag: '${{CF_BRANCH_TAG_NORMALIZED}}'
    registry: dockerhub

  PushingToDockerRegistryLatestTag:
    title: Pushing to Docker Registry - Latest tag
    type: push
    candidate: '${{BuildingDockerImage}}'
    tag: 'latest'
    when:
      branch:
        only:
          - master
    registry: dockerhub

  RunningDeployScript:
    title: Running Deploy Script
    type: deploy
    kind: kubernetes
    # k8s cluster name
    cluster: cluster-1@codefresh-staging
    namespace: default
    when:
      branch:
        only:
          - master
    # service name
    service: twitter-cf-app
    candidate:
      image: '${{BuildingDockerImage}}'
      registry: dockerhub
